#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace BudgetPlanner.Model
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="BudgiDeskDB")]
	public partial class BudgetPlannerDBDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertAccessory(Accessory instance);
    partial void UpdateAccessory(Accessory instance);
    partial void DeleteAccessory(Accessory instance);
    partial void InsertAmount(Amount instance);
    partial void UpdateAmount(Amount instance);
    partial void DeleteAmount(Amount instance);
    partial void InsertAmountSpent(AmountSpent instance);
    partial void UpdateAmountSpent(AmountSpent instance);
    partial void DeleteAmountSpent(AmountSpent instance);
    partial void InsertBill(Bill instance);
    partial void UpdateBill(Bill instance);
    partial void DeleteBill(Bill instance);
    partial void InsertBudget(Budget instance);
    partial void UpdateBudget(Budget instance);
    partial void DeleteBudget(Budget instance);
    partial void InsertFood(Food instance);
    partial void UpdateFood(Food instance);
    partial void DeleteFood(Food instance);
    partial void InsertGrocery(Grocery instance);
    partial void UpdateGrocery(Grocery instance);
    partial void DeleteGrocery(Grocery instance);
    partial void InsertPersonalBudget(PersonalBudget instance);
    partial void UpdatePersonalBudget(PersonalBudget instance);
    partial void DeletePersonalBudget(PersonalBudget instance);
    partial void InsertUserAccount(UserAccount instance);
    partial void UpdateUserAccount(UserAccount instance);
    partial void DeleteUserAccount(UserAccount instance);
    #endregion
		
		public BudgetPlannerDBDataContext() : 
				base(global::BudgetPlanner.Properties.Settings.Default.BudgetPlannerDBConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public BudgetPlannerDBDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public BudgetPlannerDBDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public BudgetPlannerDBDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public BudgetPlannerDBDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<Accessory> Accessories
		{
			get
			{
				return this.GetTable<Accessory>();
			}
		}
		
		public System.Data.Linq.Table<Amount> Amounts
		{
			get
			{
				return this.GetTable<Amount>();
			}
		}
		
		public System.Data.Linq.Table<AmountSpent> AmountSpents
		{
			get
			{
				return this.GetTable<AmountSpent>();
			}
		}
		
		public System.Data.Linq.Table<Bill> Bills
		{
			get
			{
				return this.GetTable<Bill>();
			}
		}
		
		public System.Data.Linq.Table<Budget> Budgets
		{
			get
			{
				return this.GetTable<Budget>();
			}
		}
		
		public System.Data.Linq.Table<Food> Foods
		{
			get
			{
				return this.GetTable<Food>();
			}
		}
		
		public System.Data.Linq.Table<Grocery> Groceries
		{
			get
			{
				return this.GetTable<Grocery>();
			}
		}
		
		public System.Data.Linq.Table<PersonalBudget> PersonalBudgets
		{
			get
			{
				return this.GetTable<PersonalBudget>();
			}
		}
		
		public System.Data.Linq.Table<UserAccount> UserAccounts
		{
			get
			{
				return this.GetTable<UserAccount>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Accessory")]
	public partial class Accessory : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _AccessoriesID;
		
		private System.Nullable<int> _Jewellary;
		
		private System.Nullable<int> _Perfumes;
		
		private System.Nullable<int> _InteriorDecor;
		
		private System.Nullable<int> _Cosmetics;
		
		private System.Nullable<int> _Clothes;
		
		private System.Nullable<int> _Shoes;
		
		private EntitySet<Budget> _Budgets;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnAccessoriesIDChanging(int value);
    partial void OnAccessoriesIDChanged();
    partial void OnJewellaryChanging(System.Nullable<int> value);
    partial void OnJewellaryChanged();
    partial void OnPerfumesChanging(System.Nullable<int> value);
    partial void OnPerfumesChanged();
    partial void OnInteriorDecorChanging(System.Nullable<int> value);
    partial void OnInteriorDecorChanged();
    partial void OnCosmeticsChanging(System.Nullable<int> value);
    partial void OnCosmeticsChanged();
    partial void OnClothesChanging(System.Nullable<int> value);
    partial void OnClothesChanged();
    partial void OnShoesChanging(System.Nullable<int> value);
    partial void OnShoesChanged();
    #endregion
		
		public Accessory()
		{
			this._Budgets = new EntitySet<Budget>(new Action<Budget>(this.attach_Budgets), new Action<Budget>(this.detach_Budgets));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AccessoriesID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int AccessoriesID
		{
			get
			{
				return this._AccessoriesID;
			}
			set
			{
				if ((this._AccessoriesID != value))
				{
					this.OnAccessoriesIDChanging(value);
					this.SendPropertyChanging();
					this._AccessoriesID = value;
					this.SendPropertyChanged("AccessoriesID");
					this.OnAccessoriesIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Jewellary", DbType="Int")]
		public System.Nullable<int> Jewellary
		{
			get
			{
				return this._Jewellary;
			}
			set
			{
				if ((this._Jewellary != value))
				{
					this.OnJewellaryChanging(value);
					this.SendPropertyChanging();
					this._Jewellary = value;
					this.SendPropertyChanged("Jewellary");
					this.OnJewellaryChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Perfumes", DbType="Int")]
		public System.Nullable<int> Perfumes
		{
			get
			{
				return this._Perfumes;
			}
			set
			{
				if ((this._Perfumes != value))
				{
					this.OnPerfumesChanging(value);
					this.SendPropertyChanging();
					this._Perfumes = value;
					this.SendPropertyChanged("Perfumes");
					this.OnPerfumesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InteriorDecor", DbType="Int")]
		public System.Nullable<int> InteriorDecor
		{
			get
			{
				return this._InteriorDecor;
			}
			set
			{
				if ((this._InteriorDecor != value))
				{
					this.OnInteriorDecorChanging(value);
					this.SendPropertyChanging();
					this._InteriorDecor = value;
					this.SendPropertyChanged("InteriorDecor");
					this.OnInteriorDecorChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Cosmetics", DbType="Int")]
		public System.Nullable<int> Cosmetics
		{
			get
			{
				return this._Cosmetics;
			}
			set
			{
				if ((this._Cosmetics != value))
				{
					this.OnCosmeticsChanging(value);
					this.SendPropertyChanging();
					this._Cosmetics = value;
					this.SendPropertyChanged("Cosmetics");
					this.OnCosmeticsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Clothes", DbType="Int")]
		public System.Nullable<int> Clothes
		{
			get
			{
				return this._Clothes;
			}
			set
			{
				if ((this._Clothes != value))
				{
					this.OnClothesChanging(value);
					this.SendPropertyChanging();
					this._Clothes = value;
					this.SendPropertyChanged("Clothes");
					this.OnClothesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Shoes", DbType="Int")]
		public System.Nullable<int> Shoes
		{
			get
			{
				return this._Shoes;
			}
			set
			{
				if ((this._Shoes != value))
				{
					this.OnShoesChanging(value);
					this.SendPropertyChanging();
					this._Shoes = value;
					this.SendPropertyChanged("Shoes");
					this.OnShoesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Accessory_Budget", Storage="_Budgets", ThisKey="AccessoriesID", OtherKey="AccessoriesID")]
		public EntitySet<Budget> Budgets
		{
			get
			{
				return this._Budgets;
			}
			set
			{
				this._Budgets.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Budgets(Budget entity)
		{
			this.SendPropertyChanging();
			entity.Accessory = this;
		}
		
		private void detach_Budgets(Budget entity)
		{
			this.SendPropertyChanging();
			entity.Accessory = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Amount")]
	public partial class Amount : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _UserID;
		
		private System.Nullable<int> _PersonalAmount;
		
		private System.Nullable<int> _HomeAmount;
		
		private EntityRef<UserAccount> _UserAccount;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnUserIDChanging(string value);
    partial void OnUserIDChanged();
    partial void OnPersonalAmountChanging(System.Nullable<int> value);
    partial void OnPersonalAmountChanged();
    partial void OnHomeAmountChanging(System.Nullable<int> value);
    partial void OnHomeAmountChanged();
    #endregion
		
		public Amount()
		{
			this._UserAccount = default(EntityRef<UserAccount>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserID", DbType="VarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string UserID
		{
			get
			{
				return this._UserID;
			}
			set
			{
				if ((this._UserID != value))
				{
					if (this._UserAccount.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUserIDChanging(value);
					this.SendPropertyChanging();
					this._UserID = value;
					this.SendPropertyChanged("UserID");
					this.OnUserIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PersonalAmount", DbType="Int")]
		public System.Nullable<int> PersonalAmount
		{
			get
			{
				return this._PersonalAmount;
			}
			set
			{
				if ((this._PersonalAmount != value))
				{
					this.OnPersonalAmountChanging(value);
					this.SendPropertyChanging();
					this._PersonalAmount = value;
					this.SendPropertyChanged("PersonalAmount");
					this.OnPersonalAmountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HomeAmount", DbType="Int")]
		public System.Nullable<int> HomeAmount
		{
			get
			{
				return this._HomeAmount;
			}
			set
			{
				if ((this._HomeAmount != value))
				{
					this.OnHomeAmountChanging(value);
					this.SendPropertyChanging();
					this._HomeAmount = value;
					this.SendPropertyChanged("HomeAmount");
					this.OnHomeAmountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="UserAccount_Amount", Storage="_UserAccount", ThisKey="UserID", OtherKey="ID", IsForeignKey=true)]
		public UserAccount UserAccount
		{
			get
			{
				return this._UserAccount.Entity;
			}
			set
			{
				UserAccount previousValue = this._UserAccount.Entity;
				if (((previousValue != value) 
							|| (this._UserAccount.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._UserAccount.Entity = null;
						previousValue.Amount = null;
					}
					this._UserAccount.Entity = value;
					if ((value != null))
					{
						value.Amount = this;
						this._UserID = value.ID;
					}
					else
					{
						this._UserID = default(string);
					}
					this.SendPropertyChanged("UserAccount");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.AmountSpent")]
	public partial class AmountSpent : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _UserID;
		
		private System.Nullable<long> _SpentHomeAmount;
		
		private System.Nullable<System.DateTime> _DateOfSpentAmount;
		
		private System.Nullable<long> _SpentPersonalAmount;
		
		private EntityRef<UserAccount> _UserAccount;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnUserIDChanging(string value);
    partial void OnUserIDChanged();
    partial void OnSpentHomeAmountChanging(System.Nullable<long> value);
    partial void OnSpentHomeAmountChanged();
    partial void OnDateOfSpentAmountChanging(System.Nullable<System.DateTime> value);
    partial void OnDateOfSpentAmountChanged();
    partial void OnSpentPersonalAmountChanging(System.Nullable<long> value);
    partial void OnSpentPersonalAmountChanged();
    #endregion
		
		public AmountSpent()
		{
			this._UserAccount = default(EntityRef<UserAccount>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserID", DbType="VarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string UserID
		{
			get
			{
				return this._UserID;
			}
			set
			{
				if ((this._UserID != value))
				{
					if (this._UserAccount.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUserIDChanging(value);
					this.SendPropertyChanging();
					this._UserID = value;
					this.SendPropertyChanged("UserID");
					this.OnUserIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SpentHomeAmount", DbType="BigInt")]
		public System.Nullable<long> SpentHomeAmount
		{
			get
			{
				return this._SpentHomeAmount;
			}
			set
			{
				if ((this._SpentHomeAmount != value))
				{
					this.OnSpentHomeAmountChanging(value);
					this.SendPropertyChanging();
					this._SpentHomeAmount = value;
					this.SendPropertyChanged("SpentHomeAmount");
					this.OnSpentHomeAmountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateOfSpentAmount", DbType="DateTime")]
		public System.Nullable<System.DateTime> DateOfSpentAmount
		{
			get
			{
				return this._DateOfSpentAmount;
			}
			set
			{
				if ((this._DateOfSpentAmount != value))
				{
					this.OnDateOfSpentAmountChanging(value);
					this.SendPropertyChanging();
					this._DateOfSpentAmount = value;
					this.SendPropertyChanged("DateOfSpentAmount");
					this.OnDateOfSpentAmountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SpentPersonalAmount", DbType="BigInt")]
		public System.Nullable<long> SpentPersonalAmount
		{
			get
			{
				return this._SpentPersonalAmount;
			}
			set
			{
				if ((this._SpentPersonalAmount != value))
				{
					this.OnSpentPersonalAmountChanging(value);
					this.SendPropertyChanging();
					this._SpentPersonalAmount = value;
					this.SendPropertyChanged("SpentPersonalAmount");
					this.OnSpentPersonalAmountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="UserAccount_AmountSpent", Storage="_UserAccount", ThisKey="UserID", OtherKey="ID", IsForeignKey=true)]
		public UserAccount UserAccount
		{
			get
			{
				return this._UserAccount.Entity;
			}
			set
			{
				UserAccount previousValue = this._UserAccount.Entity;
				if (((previousValue != value) 
							|| (this._UserAccount.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._UserAccount.Entity = null;
						previousValue.AmountSpent = null;
					}
					this._UserAccount.Entity = value;
					if ((value != null))
					{
						value.AmountSpent = this;
						this._UserID = value.ID;
					}
					else
					{
						this._UserID = default(string);
					}
					this.SendPropertyChanged("UserAccount");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Bill")]
	public partial class Bill : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _BillsID;
		
		private System.Nullable<int> _Electricity;
		
		private System.Nullable<int> _Gas;
		
		private System.Nullable<int> _Phone;
		
		private System.Nullable<int> _Water;
		
		private System.Nullable<int> _Medical;
		
		private System.Nullable<int> _Education;
		
		private EntitySet<Budget> _Budgets;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnBillsIDChanging(int value);
    partial void OnBillsIDChanged();
    partial void OnElectricityChanging(System.Nullable<int> value);
    partial void OnElectricityChanged();
    partial void OnGasChanging(System.Nullable<int> value);
    partial void OnGasChanged();
    partial void OnPhoneChanging(System.Nullable<int> value);
    partial void OnPhoneChanged();
    partial void OnWaterChanging(System.Nullable<int> value);
    partial void OnWaterChanged();
    partial void OnMedicalChanging(System.Nullable<int> value);
    partial void OnMedicalChanged();
    partial void OnEducationChanging(System.Nullable<int> value);
    partial void OnEducationChanged();
    #endregion
		
		public Bill()
		{
			this._Budgets = new EntitySet<Budget>(new Action<Budget>(this.attach_Budgets), new Action<Budget>(this.detach_Budgets));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BillsID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int BillsID
		{
			get
			{
				return this._BillsID;
			}
			set
			{
				if ((this._BillsID != value))
				{
					this.OnBillsIDChanging(value);
					this.SendPropertyChanging();
					this._BillsID = value;
					this.SendPropertyChanged("BillsID");
					this.OnBillsIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Electricity", DbType="Int")]
		public System.Nullable<int> Electricity
		{
			get
			{
				return this._Electricity;
			}
			set
			{
				if ((this._Electricity != value))
				{
					this.OnElectricityChanging(value);
					this.SendPropertyChanging();
					this._Electricity = value;
					this.SendPropertyChanged("Electricity");
					this.OnElectricityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Gas", DbType="Int")]
		public System.Nullable<int> Gas
		{
			get
			{
				return this._Gas;
			}
			set
			{
				if ((this._Gas != value))
				{
					this.OnGasChanging(value);
					this.SendPropertyChanging();
					this._Gas = value;
					this.SendPropertyChanged("Gas");
					this.OnGasChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Phone", DbType="Int")]
		public System.Nullable<int> Phone
		{
			get
			{
				return this._Phone;
			}
			set
			{
				if ((this._Phone != value))
				{
					this.OnPhoneChanging(value);
					this.SendPropertyChanging();
					this._Phone = value;
					this.SendPropertyChanged("Phone");
					this.OnPhoneChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Water", DbType="Int")]
		public System.Nullable<int> Water
		{
			get
			{
				return this._Water;
			}
			set
			{
				if ((this._Water != value))
				{
					this.OnWaterChanging(value);
					this.SendPropertyChanging();
					this._Water = value;
					this.SendPropertyChanged("Water");
					this.OnWaterChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Medical", DbType="Int")]
		public System.Nullable<int> Medical
		{
			get
			{
				return this._Medical;
			}
			set
			{
				if ((this._Medical != value))
				{
					this.OnMedicalChanging(value);
					this.SendPropertyChanging();
					this._Medical = value;
					this.SendPropertyChanged("Medical");
					this.OnMedicalChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Education", DbType="Int")]
		public System.Nullable<int> Education
		{
			get
			{
				return this._Education;
			}
			set
			{
				if ((this._Education != value))
				{
					this.OnEducationChanging(value);
					this.SendPropertyChanging();
					this._Education = value;
					this.SendPropertyChanged("Education");
					this.OnEducationChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Bill_Budget", Storage="_Budgets", ThisKey="BillsID", OtherKey="BillsID")]
		public EntitySet<Budget> Budgets
		{
			get
			{
				return this._Budgets;
			}
			set
			{
				this._Budgets.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Budgets(Budget entity)
		{
			this.SendPropertyChanging();
			entity.Bill = this;
		}
		
		private void detach_Budgets(Budget entity)
		{
			this.SendPropertyChanging();
			entity.Bill = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Budget")]
	public partial class Budget : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _UserID;
		
		private System.Nullable<int> _BillsID;
		
		private System.Nullable<int> _FoodID;
		
		private System.Nullable<int> _GroceryID;
		
		private System.Nullable<int> _AccessoriesID;
		
		private System.DateTime _DateOfBudget;
		
		private EntityRef<Accessory> _Accessory;
		
		private EntityRef<Bill> _Bill;
		
		private EntityRef<Food> _Food;
		
		private EntityRef<Grocery> _Grocery;
		
		private EntityRef<UserAccount> _UserAccount;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnUserIDChanging(string value);
    partial void OnUserIDChanged();
    partial void OnBillsIDChanging(System.Nullable<int> value);
    partial void OnBillsIDChanged();
    partial void OnFoodIDChanging(System.Nullable<int> value);
    partial void OnFoodIDChanged();
    partial void OnGroceryIDChanging(System.Nullable<int> value);
    partial void OnGroceryIDChanged();
    partial void OnAccessoriesIDChanging(System.Nullable<int> value);
    partial void OnAccessoriesIDChanged();
    partial void OnDateOfBudgetChanging(System.DateTime value);
    partial void OnDateOfBudgetChanged();
    #endregion
		
		public Budget()
		{
			this._Accessory = default(EntityRef<Accessory>);
			this._Bill = default(EntityRef<Bill>);
			this._Food = default(EntityRef<Food>);
			this._Grocery = default(EntityRef<Grocery>);
			this._UserAccount = default(EntityRef<UserAccount>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserID", DbType="VarChar(50)")]
		public string UserID
		{
			get
			{
				return this._UserID;
			}
			set
			{
				if ((this._UserID != value))
				{
					if (this._UserAccount.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUserIDChanging(value);
					this.SendPropertyChanging();
					this._UserID = value;
					this.SendPropertyChanged("UserID");
					this.OnUserIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BillsID", DbType="Int")]
		public System.Nullable<int> BillsID
		{
			get
			{
				return this._BillsID;
			}
			set
			{
				if ((this._BillsID != value))
				{
					if (this._Bill.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnBillsIDChanging(value);
					this.SendPropertyChanging();
					this._BillsID = value;
					this.SendPropertyChanged("BillsID");
					this.OnBillsIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FoodID", DbType="Int")]
		public System.Nullable<int> FoodID
		{
			get
			{
				return this._FoodID;
			}
			set
			{
				if ((this._FoodID != value))
				{
					if (this._Food.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnFoodIDChanging(value);
					this.SendPropertyChanging();
					this._FoodID = value;
					this.SendPropertyChanged("FoodID");
					this.OnFoodIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GroceryID", DbType="Int")]
		public System.Nullable<int> GroceryID
		{
			get
			{
				return this._GroceryID;
			}
			set
			{
				if ((this._GroceryID != value))
				{
					if (this._Grocery.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnGroceryIDChanging(value);
					this.SendPropertyChanging();
					this._GroceryID = value;
					this.SendPropertyChanged("GroceryID");
					this.OnGroceryIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AccessoriesID", DbType="Int")]
		public System.Nullable<int> AccessoriesID
		{
			get
			{
				return this._AccessoriesID;
			}
			set
			{
				if ((this._AccessoriesID != value))
				{
					if (this._Accessory.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnAccessoriesIDChanging(value);
					this.SendPropertyChanging();
					this._AccessoriesID = value;
					this.SendPropertyChanged("AccessoriesID");
					this.OnAccessoriesIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateOfBudget", DbType="DateTime NOT NULL", IsPrimaryKey=true)]
		public System.DateTime DateOfBudget
		{
			get
			{
				return this._DateOfBudget;
			}
			set
			{
				if ((this._DateOfBudget != value))
				{
					this.OnDateOfBudgetChanging(value);
					this.SendPropertyChanging();
					this._DateOfBudget = value;
					this.SendPropertyChanged("DateOfBudget");
					this.OnDateOfBudgetChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Accessory_Budget", Storage="_Accessory", ThisKey="AccessoriesID", OtherKey="AccessoriesID", IsForeignKey=true)]
		public Accessory Accessory
		{
			get
			{
				return this._Accessory.Entity;
			}
			set
			{
				Accessory previousValue = this._Accessory.Entity;
				if (((previousValue != value) 
							|| (this._Accessory.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Accessory.Entity = null;
						previousValue.Budgets.Remove(this);
					}
					this._Accessory.Entity = value;
					if ((value != null))
					{
						value.Budgets.Add(this);
						this._AccessoriesID = value.AccessoriesID;
					}
					else
					{
						this._AccessoriesID = default(Nullable<int>);
					}
					this.SendPropertyChanged("Accessory");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Bill_Budget", Storage="_Bill", ThisKey="BillsID", OtherKey="BillsID", IsForeignKey=true)]
		public Bill Bill
		{
			get
			{
				return this._Bill.Entity;
			}
			set
			{
				Bill previousValue = this._Bill.Entity;
				if (((previousValue != value) 
							|| (this._Bill.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Bill.Entity = null;
						previousValue.Budgets.Remove(this);
					}
					this._Bill.Entity = value;
					if ((value != null))
					{
						value.Budgets.Add(this);
						this._BillsID = value.BillsID;
					}
					else
					{
						this._BillsID = default(Nullable<int>);
					}
					this.SendPropertyChanged("Bill");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Food_Budget", Storage="_Food", ThisKey="FoodID", OtherKey="FoodID", IsForeignKey=true)]
		public Food Food
		{
			get
			{
				return this._Food.Entity;
			}
			set
			{
				Food previousValue = this._Food.Entity;
				if (((previousValue != value) 
							|| (this._Food.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Food.Entity = null;
						previousValue.Budgets.Remove(this);
					}
					this._Food.Entity = value;
					if ((value != null))
					{
						value.Budgets.Add(this);
						this._FoodID = value.FoodID;
					}
					else
					{
						this._FoodID = default(Nullable<int>);
					}
					this.SendPropertyChanged("Food");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Grocery_Budget", Storage="_Grocery", ThisKey="GroceryID", OtherKey="GroceryID", IsForeignKey=true)]
		public Grocery Grocery
		{
			get
			{
				return this._Grocery.Entity;
			}
			set
			{
				Grocery previousValue = this._Grocery.Entity;
				if (((previousValue != value) 
							|| (this._Grocery.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Grocery.Entity = null;
						previousValue.Budgets.Remove(this);
					}
					this._Grocery.Entity = value;
					if ((value != null))
					{
						value.Budgets.Add(this);
						this._GroceryID = value.GroceryID;
					}
					else
					{
						this._GroceryID = default(Nullable<int>);
					}
					this.SendPropertyChanged("Grocery");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="UserAccount_Budget", Storage="_UserAccount", ThisKey="UserID", OtherKey="ID", IsForeignKey=true)]
		public UserAccount UserAccount
		{
			get
			{
				return this._UserAccount.Entity;
			}
			set
			{
				UserAccount previousValue = this._UserAccount.Entity;
				if (((previousValue != value) 
							|| (this._UserAccount.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._UserAccount.Entity = null;
						previousValue.Budgets.Remove(this);
					}
					this._UserAccount.Entity = value;
					if ((value != null))
					{
						value.Budgets.Add(this);
						this._UserID = value.ID;
					}
					else
					{
						this._UserID = default(string);
					}
					this.SendPropertyChanged("UserAccount");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Food")]
	public partial class Food : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _FoodID;
		
		private System.Nullable<int> _Vegetables;
		
		private System.Nullable<int> _Fruits;
		
		private System.Nullable<int> _Meat;
		
		private System.Nullable<int> _Milk;
		
		private EntitySet<Budget> _Budgets;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnFoodIDChanging(int value);
    partial void OnFoodIDChanged();
    partial void OnVegetablesChanging(System.Nullable<int> value);
    partial void OnVegetablesChanged();
    partial void OnFruitsChanging(System.Nullable<int> value);
    partial void OnFruitsChanged();
    partial void OnMeatChanging(System.Nullable<int> value);
    partial void OnMeatChanged();
    partial void OnMilkChanging(System.Nullable<int> value);
    partial void OnMilkChanged();
    #endregion
		
		public Food()
		{
			this._Budgets = new EntitySet<Budget>(new Action<Budget>(this.attach_Budgets), new Action<Budget>(this.detach_Budgets));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FoodID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int FoodID
		{
			get
			{
				return this._FoodID;
			}
			set
			{
				if ((this._FoodID != value))
				{
					this.OnFoodIDChanging(value);
					this.SendPropertyChanging();
					this._FoodID = value;
					this.SendPropertyChanged("FoodID");
					this.OnFoodIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Vegetables", DbType="Int")]
		public System.Nullable<int> Vegetables
		{
			get
			{
				return this._Vegetables;
			}
			set
			{
				if ((this._Vegetables != value))
				{
					this.OnVegetablesChanging(value);
					this.SendPropertyChanging();
					this._Vegetables = value;
					this.SendPropertyChanged("Vegetables");
					this.OnVegetablesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Fruits", DbType="Int")]
		public System.Nullable<int> Fruits
		{
			get
			{
				return this._Fruits;
			}
			set
			{
				if ((this._Fruits != value))
				{
					this.OnFruitsChanging(value);
					this.SendPropertyChanging();
					this._Fruits = value;
					this.SendPropertyChanged("Fruits");
					this.OnFruitsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Meat", DbType="Int")]
		public System.Nullable<int> Meat
		{
			get
			{
				return this._Meat;
			}
			set
			{
				if ((this._Meat != value))
				{
					this.OnMeatChanging(value);
					this.SendPropertyChanging();
					this._Meat = value;
					this.SendPropertyChanged("Meat");
					this.OnMeatChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Milk", DbType="Int")]
		public System.Nullable<int> Milk
		{
			get
			{
				return this._Milk;
			}
			set
			{
				if ((this._Milk != value))
				{
					this.OnMilkChanging(value);
					this.SendPropertyChanging();
					this._Milk = value;
					this.SendPropertyChanged("Milk");
					this.OnMilkChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Food_Budget", Storage="_Budgets", ThisKey="FoodID", OtherKey="FoodID")]
		public EntitySet<Budget> Budgets
		{
			get
			{
				return this._Budgets;
			}
			set
			{
				this._Budgets.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Budgets(Budget entity)
		{
			this.SendPropertyChanging();
			entity.Food = this;
		}
		
		private void detach_Budgets(Budget entity)
		{
			this.SendPropertyChanging();
			entity.Food = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Grocery")]
	public partial class Grocery : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _GroceryID;
		
		private System.Nullable<int> _Cereals;
		
		private System.Nullable<int> _Soap;
		
		private System.Nullable<int> _Shampoo;
		
		private System.Nullable<int> _Lotion;
		
		private System.Nullable<int> _Oil;
		
		private System.Nullable<int> _Deoderants;
		
		private System.Nullable<int> _Surf;
		
		private System.Nullable<int> _ToothPaste;
		
		private System.Nullable<int> _CleaningLiquids;
		
		private System.Nullable<int> _Tea;
		
		private System.Nullable<int> _EnergyDrinks;
		
		private System.Nullable<int> _Spices;
		
		private EntitySet<Budget> _Budgets;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnGroceryIDChanging(int value);
    partial void OnGroceryIDChanged();
    partial void OnCerealsChanging(System.Nullable<int> value);
    partial void OnCerealsChanged();
    partial void OnSoapChanging(System.Nullable<int> value);
    partial void OnSoapChanged();
    partial void OnShampooChanging(System.Nullable<int> value);
    partial void OnShampooChanged();
    partial void OnLotionChanging(System.Nullable<int> value);
    partial void OnLotionChanged();
    partial void OnOilChanging(System.Nullable<int> value);
    partial void OnOilChanged();
    partial void OnDeoderantsChanging(System.Nullable<int> value);
    partial void OnDeoderantsChanged();
    partial void OnSurfChanging(System.Nullable<int> value);
    partial void OnSurfChanged();
    partial void OnToothPasteChanging(System.Nullable<int> value);
    partial void OnToothPasteChanged();
    partial void OnCleaningLiquidsChanging(System.Nullable<int> value);
    partial void OnCleaningLiquidsChanged();
    partial void OnTeaChanging(System.Nullable<int> value);
    partial void OnTeaChanged();
    partial void OnEnergyDrinksChanging(System.Nullable<int> value);
    partial void OnEnergyDrinksChanged();
    partial void OnSpicesChanging(System.Nullable<int> value);
    partial void OnSpicesChanged();
    #endregion
		
		public Grocery()
		{
			this._Budgets = new EntitySet<Budget>(new Action<Budget>(this.attach_Budgets), new Action<Budget>(this.detach_Budgets));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GroceryID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int GroceryID
		{
			get
			{
				return this._GroceryID;
			}
			set
			{
				if ((this._GroceryID != value))
				{
					this.OnGroceryIDChanging(value);
					this.SendPropertyChanging();
					this._GroceryID = value;
					this.SendPropertyChanged("GroceryID");
					this.OnGroceryIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Cereals", DbType="Int")]
		public System.Nullable<int> Cereals
		{
			get
			{
				return this._Cereals;
			}
			set
			{
				if ((this._Cereals != value))
				{
					this.OnCerealsChanging(value);
					this.SendPropertyChanging();
					this._Cereals = value;
					this.SendPropertyChanged("Cereals");
					this.OnCerealsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Soap", DbType="Int")]
		public System.Nullable<int> Soap
		{
			get
			{
				return this._Soap;
			}
			set
			{
				if ((this._Soap != value))
				{
					this.OnSoapChanging(value);
					this.SendPropertyChanging();
					this._Soap = value;
					this.SendPropertyChanged("Soap");
					this.OnSoapChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Shampoo", DbType="Int")]
		public System.Nullable<int> Shampoo
		{
			get
			{
				return this._Shampoo;
			}
			set
			{
				if ((this._Shampoo != value))
				{
					this.OnShampooChanging(value);
					this.SendPropertyChanging();
					this._Shampoo = value;
					this.SendPropertyChanged("Shampoo");
					this.OnShampooChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Lotion", DbType="Int")]
		public System.Nullable<int> Lotion
		{
			get
			{
				return this._Lotion;
			}
			set
			{
				if ((this._Lotion != value))
				{
					this.OnLotionChanging(value);
					this.SendPropertyChanging();
					this._Lotion = value;
					this.SendPropertyChanged("Lotion");
					this.OnLotionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Oil", DbType="Int")]
		public System.Nullable<int> Oil
		{
			get
			{
				return this._Oil;
			}
			set
			{
				if ((this._Oil != value))
				{
					this.OnOilChanging(value);
					this.SendPropertyChanging();
					this._Oil = value;
					this.SendPropertyChanged("Oil");
					this.OnOilChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Deoderants", DbType="Int")]
		public System.Nullable<int> Deoderants
		{
			get
			{
				return this._Deoderants;
			}
			set
			{
				if ((this._Deoderants != value))
				{
					this.OnDeoderantsChanging(value);
					this.SendPropertyChanging();
					this._Deoderants = value;
					this.SendPropertyChanged("Deoderants");
					this.OnDeoderantsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Surf", DbType="Int")]
		public System.Nullable<int> Surf
		{
			get
			{
				return this._Surf;
			}
			set
			{
				if ((this._Surf != value))
				{
					this.OnSurfChanging(value);
					this.SendPropertyChanging();
					this._Surf = value;
					this.SendPropertyChanged("Surf");
					this.OnSurfChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ToothPaste", DbType="Int")]
		public System.Nullable<int> ToothPaste
		{
			get
			{
				return this._ToothPaste;
			}
			set
			{
				if ((this._ToothPaste != value))
				{
					this.OnToothPasteChanging(value);
					this.SendPropertyChanging();
					this._ToothPaste = value;
					this.SendPropertyChanged("ToothPaste");
					this.OnToothPasteChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CleaningLiquids", DbType="Int")]
		public System.Nullable<int> CleaningLiquids
		{
			get
			{
				return this._CleaningLiquids;
			}
			set
			{
				if ((this._CleaningLiquids != value))
				{
					this.OnCleaningLiquidsChanging(value);
					this.SendPropertyChanging();
					this._CleaningLiquids = value;
					this.SendPropertyChanged("CleaningLiquids");
					this.OnCleaningLiquidsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Tea", DbType="Int")]
		public System.Nullable<int> Tea
		{
			get
			{
				return this._Tea;
			}
			set
			{
				if ((this._Tea != value))
				{
					this.OnTeaChanging(value);
					this.SendPropertyChanging();
					this._Tea = value;
					this.SendPropertyChanged("Tea");
					this.OnTeaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EnergyDrinks", DbType="Int")]
		public System.Nullable<int> EnergyDrinks
		{
			get
			{
				return this._EnergyDrinks;
			}
			set
			{
				if ((this._EnergyDrinks != value))
				{
					this.OnEnergyDrinksChanging(value);
					this.SendPropertyChanging();
					this._EnergyDrinks = value;
					this.SendPropertyChanged("EnergyDrinks");
					this.OnEnergyDrinksChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Spices", DbType="Int")]
		public System.Nullable<int> Spices
		{
			get
			{
				return this._Spices;
			}
			set
			{
				if ((this._Spices != value))
				{
					this.OnSpicesChanging(value);
					this.SendPropertyChanging();
					this._Spices = value;
					this.SendPropertyChanged("Spices");
					this.OnSpicesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Grocery_Budget", Storage="_Budgets", ThisKey="GroceryID", OtherKey="GroceryID")]
		public EntitySet<Budget> Budgets
		{
			get
			{
				return this._Budgets;
			}
			set
			{
				this._Budgets.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Budgets(Budget entity)
		{
			this.SendPropertyChanging();
			entity.Grocery = this;
		}
		
		private void detach_Budgets(Budget entity)
		{
			this.SendPropertyChanging();
			entity.Grocery = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.PersonalBudget")]
	public partial class PersonalBudget : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _UserID;
		
		private System.Nullable<int> _BusFair;
		
		private System.Nullable<int> _WithFriends;
		
		private System.Nullable<int> _OnMySelf;
		
		private System.Nullable<int> _Gifts;
		
		private System.Nullable<int> _Extra;
		
		private System.Nullable<int> _Clothes;
		
		private System.Nullable<int> _Phone;
		
		private System.DateTime _Date;
		
		private EntityRef<UserAccount> _UserAccount;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnUserIDChanging(string value);
    partial void OnUserIDChanged();
    partial void OnBusFairChanging(System.Nullable<int> value);
    partial void OnBusFairChanged();
    partial void OnWithFriendsChanging(System.Nullable<int> value);
    partial void OnWithFriendsChanged();
    partial void OnOnMySelfChanging(System.Nullable<int> value);
    partial void OnOnMySelfChanged();
    partial void OnGiftsChanging(System.Nullable<int> value);
    partial void OnGiftsChanged();
    partial void OnExtraChanging(System.Nullable<int> value);
    partial void OnExtraChanged();
    partial void OnClothesChanging(System.Nullable<int> value);
    partial void OnClothesChanged();
    partial void OnPhoneChanging(System.Nullable<int> value);
    partial void OnPhoneChanged();
    partial void OnDateChanging(System.DateTime value);
    partial void OnDateChanged();
    #endregion
		
		public PersonalBudget()
		{
			this._UserAccount = default(EntityRef<UserAccount>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserID", DbType="VarChar(50)")]
		public string UserID
		{
			get
			{
				return this._UserID;
			}
			set
			{
				if ((this._UserID != value))
				{
					if (this._UserAccount.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUserIDChanging(value);
					this.SendPropertyChanging();
					this._UserID = value;
					this.SendPropertyChanged("UserID");
					this.OnUserIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BusFair", DbType="Int")]
		public System.Nullable<int> BusFair
		{
			get
			{
				return this._BusFair;
			}
			set
			{
				if ((this._BusFair != value))
				{
					this.OnBusFairChanging(value);
					this.SendPropertyChanging();
					this._BusFair = value;
					this.SendPropertyChanged("BusFair");
					this.OnBusFairChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WithFriends", DbType="Int")]
		public System.Nullable<int> WithFriends
		{
			get
			{
				return this._WithFriends;
			}
			set
			{
				if ((this._WithFriends != value))
				{
					this.OnWithFriendsChanging(value);
					this.SendPropertyChanging();
					this._WithFriends = value;
					this.SendPropertyChanged("WithFriends");
					this.OnWithFriendsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OnMySelf", DbType="Int")]
		public System.Nullable<int> OnMySelf
		{
			get
			{
				return this._OnMySelf;
			}
			set
			{
				if ((this._OnMySelf != value))
				{
					this.OnOnMySelfChanging(value);
					this.SendPropertyChanging();
					this._OnMySelf = value;
					this.SendPropertyChanged("OnMySelf");
					this.OnOnMySelfChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Gifts", DbType="Int")]
		public System.Nullable<int> Gifts
		{
			get
			{
				return this._Gifts;
			}
			set
			{
				if ((this._Gifts != value))
				{
					this.OnGiftsChanging(value);
					this.SendPropertyChanging();
					this._Gifts = value;
					this.SendPropertyChanged("Gifts");
					this.OnGiftsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Extra", DbType="Int")]
		public System.Nullable<int> Extra
		{
			get
			{
				return this._Extra;
			}
			set
			{
				if ((this._Extra != value))
				{
					this.OnExtraChanging(value);
					this.SendPropertyChanging();
					this._Extra = value;
					this.SendPropertyChanged("Extra");
					this.OnExtraChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Clothes", DbType="Int")]
		public System.Nullable<int> Clothes
		{
			get
			{
				return this._Clothes;
			}
			set
			{
				if ((this._Clothes != value))
				{
					this.OnClothesChanging(value);
					this.SendPropertyChanging();
					this._Clothes = value;
					this.SendPropertyChanged("Clothes");
					this.OnClothesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Phone", DbType="Int")]
		public System.Nullable<int> Phone
		{
			get
			{
				return this._Phone;
			}
			set
			{
				if ((this._Phone != value))
				{
					this.OnPhoneChanging(value);
					this.SendPropertyChanging();
					this._Phone = value;
					this.SendPropertyChanged("Phone");
					this.OnPhoneChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Date", DbType="DateTime NOT NULL", IsPrimaryKey=true)]
		public System.DateTime Date
		{
			get
			{
				return this._Date;
			}
			set
			{
				if ((this._Date != value))
				{
					this.OnDateChanging(value);
					this.SendPropertyChanging();
					this._Date = value;
					this.SendPropertyChanged("Date");
					this.OnDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="UserAccount_PersonalBudget", Storage="_UserAccount", ThisKey="UserID", OtherKey="ID", IsForeignKey=true)]
		public UserAccount UserAccount
		{
			get
			{
				return this._UserAccount.Entity;
			}
			set
			{
				UserAccount previousValue = this._UserAccount.Entity;
				if (((previousValue != value) 
							|| (this._UserAccount.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._UserAccount.Entity = null;
						previousValue.PersonalBudgets.Remove(this);
					}
					this._UserAccount.Entity = value;
					if ((value != null))
					{
						value.PersonalBudgets.Add(this);
						this._UserID = value.ID;
					}
					else
					{
						this._UserID = default(string);
					}
					this.SendPropertyChanged("UserAccount");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.UserAccount")]
	public partial class UserAccount : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _ID;
		
		private string _Name;
		
		private string _PhoneNumber;
		
		private System.Nullable<int> _Age;
		
		private System.Nullable<bool> _Gender;
		
		private string _UserName;
		
		private string _Password;
		
		private EntityRef<Amount> _Amount;
		
		private EntityRef<AmountSpent> _AmountSpent;
		
		private EntitySet<Budget> _Budgets;
		
		private EntitySet<PersonalBudget> _PersonalBudgets;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(string value);
    partial void OnIDChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnPhoneNumberChanging(string value);
    partial void OnPhoneNumberChanged();
    partial void OnAgeChanging(System.Nullable<int> value);
    partial void OnAgeChanged();
    partial void OnGenderChanging(System.Nullable<bool> value);
    partial void OnGenderChanged();
    partial void OnUserNameChanging(string value);
    partial void OnUserNameChanged();
    partial void OnPasswordChanging(string value);
    partial void OnPasswordChanged();
    #endregion
		
		public UserAccount()
		{
			this._Amount = default(EntityRef<Amount>);
			this._AmountSpent = default(EntityRef<AmountSpent>);
			this._Budgets = new EntitySet<Budget>(new Action<Budget>(this.attach_Budgets), new Action<Budget>(this.detach_Budgets));
			this._PersonalBudgets = new EntitySet<PersonalBudget>(new Action<PersonalBudget>(this.attach_PersonalBudgets), new Action<PersonalBudget>(this.detach_PersonalBudgets));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="VarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="VarChar(50)")]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PhoneNumber", DbType="VarChar(50)")]
		public string PhoneNumber
		{
			get
			{
				return this._PhoneNumber;
			}
			set
			{
				if ((this._PhoneNumber != value))
				{
					this.OnPhoneNumberChanging(value);
					this.SendPropertyChanging();
					this._PhoneNumber = value;
					this.SendPropertyChanged("PhoneNumber");
					this.OnPhoneNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Age", DbType="Int")]
		public System.Nullable<int> Age
		{
			get
			{
				return this._Age;
			}
			set
			{
				if ((this._Age != value))
				{
					this.OnAgeChanging(value);
					this.SendPropertyChanging();
					this._Age = value;
					this.SendPropertyChanged("Age");
					this.OnAgeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Gender", DbType="Bit")]
		public System.Nullable<bool> Gender
		{
			get
			{
				return this._Gender;
			}
			set
			{
				if ((this._Gender != value))
				{
					this.OnGenderChanging(value);
					this.SendPropertyChanging();
					this._Gender = value;
					this.SendPropertyChanged("Gender");
					this.OnGenderChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserName", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string UserName
		{
			get
			{
				return this._UserName;
			}
			set
			{
				if ((this._UserName != value))
				{
					this.OnUserNameChanging(value);
					this.SendPropertyChanging();
					this._UserName = value;
					this.SendPropertyChanged("UserName");
					this.OnUserNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Password", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string Password
		{
			get
			{
				return this._Password;
			}
			set
			{
				if ((this._Password != value))
				{
					this.OnPasswordChanging(value);
					this.SendPropertyChanging();
					this._Password = value;
					this.SendPropertyChanged("Password");
					this.OnPasswordChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="UserAccount_Amount", Storage="_Amount", ThisKey="ID", OtherKey="UserID", IsUnique=true, IsForeignKey=false)]
		public Amount Amount
		{
			get
			{
				return this._Amount.Entity;
			}
			set
			{
				Amount previousValue = this._Amount.Entity;
				if (((previousValue != value) 
							|| (this._Amount.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Amount.Entity = null;
						previousValue.UserAccount = null;
					}
					this._Amount.Entity = value;
					if ((value != null))
					{
						value.UserAccount = this;
					}
					this.SendPropertyChanged("Amount");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="UserAccount_AmountSpent", Storage="_AmountSpent", ThisKey="ID", OtherKey="UserID", IsUnique=true, IsForeignKey=false)]
		public AmountSpent AmountSpent
		{
			get
			{
				return this._AmountSpent.Entity;
			}
			set
			{
				AmountSpent previousValue = this._AmountSpent.Entity;
				if (((previousValue != value) 
							|| (this._AmountSpent.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._AmountSpent.Entity = null;
						previousValue.UserAccount = null;
					}
					this._AmountSpent.Entity = value;
					if ((value != null))
					{
						value.UserAccount = this;
					}
					this.SendPropertyChanged("AmountSpent");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="UserAccount_Budget", Storage="_Budgets", ThisKey="ID", OtherKey="UserID")]
		public EntitySet<Budget> Budgets
		{
			get
			{
				return this._Budgets;
			}
			set
			{
				this._Budgets.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="UserAccount_PersonalBudget", Storage="_PersonalBudgets", ThisKey="ID", OtherKey="UserID")]
		public EntitySet<PersonalBudget> PersonalBudgets
		{
			get
			{
				return this._PersonalBudgets;
			}
			set
			{
				this._PersonalBudgets.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Budgets(Budget entity)
		{
			this.SendPropertyChanging();
			entity.UserAccount = this;
		}
		
		private void detach_Budgets(Budget entity)
		{
			this.SendPropertyChanging();
			entity.UserAccount = null;
		}
		
		private void attach_PersonalBudgets(PersonalBudget entity)
		{
			this.SendPropertyChanging();
			entity.UserAccount = this;
		}
		
		private void detach_PersonalBudgets(PersonalBudget entity)
		{
			this.SendPropertyChanging();
			entity.UserAccount = null;
		}
	}
}
#pragma warning restore 1591
